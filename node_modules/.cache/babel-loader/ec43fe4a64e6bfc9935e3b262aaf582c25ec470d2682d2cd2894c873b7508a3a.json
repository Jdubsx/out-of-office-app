{"ast":null,"code":"/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module ChaosHandlerOptions\n */\nimport { ChaosStrategy } from \"./ChaosStrategy\";\n/**\n * Class representing ChaosHandlerOptions\n * @class\n * Class\n * @implements MiddlewareOptions\n */\nexport class ChaosHandlerOptions {\n  /**\n   * @public\n   * @constructor\n   * To create an instance of Testing Handler Options\n   * @param {ChaosStrategy} chaosStrategy - Specifies the startegy used for the Testing Handler -> RAMDOM/MANUAL\n   * @param {string} statusMessage - The Message to be returned in the response\n   * @param {number?} statusCode - The statusCode to be returned in the response\n   * @param {number?} chaosPercentage - The percentage of randomness/chaos in the handler\n   * @param {any?} responseBody - The response body to be returned in the response\n   * @returns An instance of ChaosHandlerOptions\n   */\n  constructor(chaosStrategy = ChaosStrategy.RANDOM, statusMessage = \"Some error Happened\", statusCode, chaosPercentage, responseBody, headers) {\n    this.chaosStrategy = chaosStrategy;\n    this.statusCode = statusCode;\n    this.statusMessage = statusMessage;\n    this.chaosPercentage = chaosPercentage !== undefined ? chaosPercentage : 10;\n    this.responseBody = responseBody;\n    this.headers = headers;\n    if (this.chaosPercentage > 100) {\n      throw new Error(\"Error Pecentage can not be more than 100\");\n    }\n  }\n}","map":{"version":3,"names":["ChaosStrategy","ChaosHandlerOptions","constructor","chaosStrategy","RANDOM","statusMessage","statusCode","chaosPercentage","responseBody","headers","undefined","Error"],"sources":["C:\\Users\\j.wenzel\\Documents\\Programming\\Out of Office App\\node_modules\\@microsoft\\microsoft-graph-client\\src\\middleware\\options\\ChaosHandlerOptions.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * @module ChaosHandlerOptions\n */\n\nimport { ChaosStrategy } from \"./ChaosStrategy\";\nimport { MiddlewareOptions } from \"./IMiddlewareOptions\";\n\n/**\n * Class representing ChaosHandlerOptions\n * @class\n * Class\n * @implements MiddlewareOptions\n */\nexport class ChaosHandlerOptions implements MiddlewareOptions {\n\t/**\n\t * Specifies the startegy used for the Testing Handler -> RANDOM/MANUAL\n\t *\n\t * @public\n\t */\n\tpublic chaosStrategy: ChaosStrategy;\n\n\t/**\n\t * Status code to be returned in the response\n\t *\n\t * @public\n\t */\n\tpublic statusCode: number;\n\n\t/**\n\t * The Message to be returned in the response\n\t *\n\t * @public\n\t */\n\tpublic statusMessage: string;\n\n\t/**\n\t * The percentage of randomness/chaos in the handler\n\t *\n\t * Setting the default value as 10%\n\t * @public\n\t */\n\tpublic chaosPercentage: number;\n\n\t/**\n\t * The response body to be returned in the response\n\t *\n\t * @public\n\t */\n\tpublic responseBody: any;\n\n\t/**\n\t * The response headers to be returned in the response\n\t *\n\t * @public\n\t */\n\tpublic headers: Headers;\n\n\t/**\n\t * @public\n\t * @constructor\n\t * To create an instance of Testing Handler Options\n\t * @param {ChaosStrategy} chaosStrategy - Specifies the startegy used for the Testing Handler -> RAMDOM/MANUAL\n\t * @param {string} statusMessage - The Message to be returned in the response\n\t * @param {number?} statusCode - The statusCode to be returned in the response\n\t * @param {number?} chaosPercentage - The percentage of randomness/chaos in the handler\n\t * @param {any?} responseBody - The response body to be returned in the response\n\t * @returns An instance of ChaosHandlerOptions\n\t */\n\tpublic constructor(chaosStrategy: ChaosStrategy = ChaosStrategy.RANDOM, statusMessage = \"Some error Happened\", statusCode?: number, chaosPercentage?: number, responseBody?: any, headers?: Headers) {\n\t\tthis.chaosStrategy = chaosStrategy;\n\t\tthis.statusCode = statusCode;\n\t\tthis.statusMessage = statusMessage;\n\t\tthis.chaosPercentage = chaosPercentage !== undefined ? chaosPercentage : 10;\n\t\tthis.responseBody = responseBody;\n\t\tthis.headers = headers;\n\t\tif (this.chaosPercentage > 100) {\n\t\t\tthrow new Error(\"Error Pecentage can not be more than 100\");\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;;;;;;AAOA;;;AAIA,SAASA,aAAa,QAAQ,iBAAiB;AAG/C;;;;;;AAMA,OAAM,MAAOC,mBAAmB;EA4C/B;;;;;;;;;;;EAWAC,YAAmBC,aAAA,GAA+BH,aAAa,CAACI,MAAM,EAAEC,aAAa,GAAG,qBAAqB,EAAEC,UAAmB,EAAEC,eAAwB,EAAEC,YAAkB,EAAEC,OAAiB;IAClM,IAAI,CAACN,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACG,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACE,eAAe,GAAGA,eAAe,KAAKG,SAAS,GAAGH,eAAe,GAAG,EAAE;IAC3E,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,IAAI,CAACF,eAAe,GAAG,GAAG,EAAE;MAC/B,MAAM,IAAII,KAAK,CAAC,0CAA0C,CAAC;;EAE7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}