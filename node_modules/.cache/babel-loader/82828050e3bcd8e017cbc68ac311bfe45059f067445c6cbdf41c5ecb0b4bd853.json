{"ast":null,"code":"/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @class\n * @implements MiddlewareOptions\n * A class representing RedirectHandlerOptions\n */\nexport class RedirectHandlerOptions {\n  /**\n   * @public\n   * @constructor\n   * To create an instance of RedirectHandlerOptions\n   * @param {number} [maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS] - The max redirects value\n   * @param {ShouldRedirect} [shouldRedirect = RedirectHandlerOptions.DEFAULT_SHOULD_RETRY] - The should redirect callback\n   * @returns An instance of RedirectHandlerOptions\n   */\n  constructor(maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS, shouldRedirect = RedirectHandlerOptions.defaultShouldRedirect) {\n    if (maxRedirects > RedirectHandlerOptions.MAX_MAX_REDIRECTS) {\n      const error = new Error(`MaxRedirects should not be more than ${RedirectHandlerOptions.MAX_MAX_REDIRECTS}`);\n      error.name = \"MaxLimitExceeded\";\n      throw error;\n    }\n    if (maxRedirects < 0) {\n      const error = new Error(`MaxRedirects should not be negative`);\n      error.name = \"MinExpectationNotMet\";\n      throw error;\n    }\n    this.maxRedirects = maxRedirects;\n    this.shouldRedirect = shouldRedirect;\n  }\n}\n/**\n * @private\n * @static\n * A member holding default max redirects value\n */\nRedirectHandlerOptions.DEFAULT_MAX_REDIRECTS = 5;\n/**\n * @private\n * @static\n * A member holding maximum max redirects value\n */\nRedirectHandlerOptions.MAX_MAX_REDIRECTS = 20;\n/**\n * @private\n * A member holding default shouldRedirect callback\n */\nRedirectHandlerOptions.defaultShouldRedirect = () => true;","map":{"version":3,"names":["RedirectHandlerOptions","constructor","maxRedirects","DEFAULT_MAX_REDIRECTS","shouldRedirect","defaultShouldRedirect","MAX_MAX_REDIRECTS","error","Error","name"],"sources":["C:\\Users\\j.wenzel\\Documents\\Programming\\Out of Office App\\node_modules\\@microsoft\\microsoft-graph-client\\src\\middleware\\options\\RedirectHandlerOptions.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * @module RedirectHandlerOptions\n */\n\nimport { MiddlewareOptions } from \"./IMiddlewareOptions\";\n\n/**\n * @type\n * A type declaration for shouldRetry callback\n */\nexport type ShouldRedirect = (response: Response) => boolean;\n\n/**\n * @class\n * @implements MiddlewareOptions\n * A class representing RedirectHandlerOptions\n */\nexport class RedirectHandlerOptions implements MiddlewareOptions {\n\t/**\n\t * @private\n\t * @static\n\t * A member holding default max redirects value\n\t */\n\tprivate static DEFAULT_MAX_REDIRECTS = 5;\n\n\t/**\n\t * @private\n\t * @static\n\t * A member holding maximum max redirects value\n\t */\n\tprivate static MAX_MAX_REDIRECTS = 20;\n\n\t/**\n\t * @public\n\t * A member holding max redirects value\n\t */\n\tpublic maxRedirects: number;\n\n\t/**\n\t * @public\n\t * A member holding shouldRedirect callback\n\t */\n\tpublic shouldRedirect: ShouldRedirect;\n\n\t/**\n\t * @private\n\t * A member holding default shouldRedirect callback\n\t */\n\tprivate static defaultShouldRedirect: ShouldRedirect = () => true;\n\n\t/**\n\t * @public\n\t * @constructor\n\t * To create an instance of RedirectHandlerOptions\n\t * @param {number} [maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS] - The max redirects value\n\t * @param {ShouldRedirect} [shouldRedirect = RedirectHandlerOptions.DEFAULT_SHOULD_RETRY] - The should redirect callback\n\t * @returns An instance of RedirectHandlerOptions\n\t */\n\tpublic constructor(maxRedirects: number = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS, shouldRedirect: ShouldRedirect = RedirectHandlerOptions.defaultShouldRedirect) {\n\t\tif (maxRedirects > RedirectHandlerOptions.MAX_MAX_REDIRECTS) {\n\t\t\tconst error = new Error(`MaxRedirects should not be more than ${RedirectHandlerOptions.MAX_MAX_REDIRECTS}`);\n\t\t\terror.name = \"MaxLimitExceeded\";\n\t\t\tthrow error;\n\t\t}\n\t\tif (maxRedirects < 0) {\n\t\t\tconst error = new Error(`MaxRedirects should not be negative`);\n\t\t\terror.name = \"MinExpectationNotMet\";\n\t\t\tthrow error;\n\t\t}\n\t\tthis.maxRedirects = maxRedirects;\n\t\tthis.shouldRedirect = shouldRedirect;\n\t}\n}\n"],"mappings":"AAAA;;;;;;AAmBA;;;;;AAKA,OAAM,MAAOA,sBAAsB;EAiClC;;;;;;;;EAQAC,YAAmBC,YAAA,GAAuBF,sBAAsB,CAACG,qBAAqB,EAAEC,cAAA,GAAiCJ,sBAAsB,CAACK,qBAAqB;IACpK,IAAIH,YAAY,GAAGF,sBAAsB,CAACM,iBAAiB,EAAE;MAC5D,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,wCAAwCR,sBAAsB,CAACM,iBAAiB,EAAE,CAAC;MAC3GC,KAAK,CAACE,IAAI,GAAG,kBAAkB;MAC/B,MAAMF,KAAK;;IAEZ,IAAIL,YAAY,GAAG,CAAC,EAAE;MACrB,MAAMK,KAAK,GAAG,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MAC9DD,KAAK,CAACE,IAAI,GAAG,sBAAsB;MACnC,MAAMF,KAAK;;IAEZ,IAAI,CAACL,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,cAAc,GAAGA,cAAc;EACrC;;AArDA;;;;;AAKeJ,sBAAA,CAAAG,qBAAqB,GAAG,CAAC;AAExC;;;;;AAKeH,sBAAA,CAAAM,iBAAiB,GAAG,EAAE;AAcrC;;;;AAIeN,sBAAA,CAAAK,qBAAqB,GAAmB,MAAM,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}