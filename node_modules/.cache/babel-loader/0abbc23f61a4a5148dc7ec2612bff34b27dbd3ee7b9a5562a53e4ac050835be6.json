{"ast":null,"code":"/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module GraphError\n */\n/**\n * @class\n * Class for GraphError\n * @NOTE: This is NOT what is returned from the Graph\n * GraphError is created from parsing JSON errors returned from the graph\n * Some fields are renamed ie, \"request-id\" => requestId so you can use dot notation\n */\nexport class GraphError extends Error {\n  /**\n   * @public\n   * @constructor\n   * Creates an instance of GraphError\n   * @param {number} [statusCode = -1] - The status code of the error\n   * @param {string} [message] - The message of the error\n   * @param {Error} [baseError] - The base error\n   * @returns An instance of GraphError\n   */\n  constructor(statusCode = -1, message, baseError) {\n    super(message || baseError && baseError.message);\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, GraphError.prototype);\n    this.statusCode = statusCode;\n    this.code = null;\n    this.requestId = null;\n    this.date = new Date();\n    this.body = null;\n    this.stack = baseError ? baseError.stack : this.stack;\n  }\n}","map":{"version":3,"names":["GraphError","Error","constructor","statusCode","message","baseError","Object","setPrototypeOf","prototype","code","requestId","date","Date","body","stack"],"sources":["C:\\Users\\j.wenzel\\Documents\\Programming\\Out of Office App\\node_modules\\@microsoft\\microsoft-graph-client\\src\\GraphError.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * @module GraphError\n */\n\n/**\n * @class\n * Class for GraphError\n * @NOTE: This is NOT what is returned from the Graph\n * GraphError is created from parsing JSON errors returned from the graph\n * Some fields are renamed ie, \"request-id\" => requestId so you can use dot notation\n */\n\nexport class GraphError extends Error {\n\t/**\n\t * @public\n\t * A member holding status code of the error\n\t */\n\tpublic statusCode: number;\n\n\t/**\n\t * @public\n\t * A member holding code i.e name of the error\n\t */\n\tpublic code: string | null;\n\n\t/**\n\t * @public\n\t * A member holding request-id i.e identifier of the request\n\t */\n\tpublic requestId: string | null;\n\n\t/**\n\t * @public\n\t * A member holding processed date and time of the request\n\t */\n\tpublic date: Date;\n\n    public headers?: Headers;\n\n\t/**\n\t * @public\n\t * A member holding original error response by the graph service\n\t */\n\tpublic body: any;\n\n\t/**\n\t * @public\n\t * @constructor\n\t * Creates an instance of GraphError\n\t * @param {number} [statusCode = -1] - The status code of the error\n\t * @param {string} [message] - The message of the error\n\t * @param {Error} [baseError] - The base error\n\t * @returns An instance of GraphError\n\t */\n\tpublic constructor(statusCode = -1, message?: string, baseError?: Error) {\n\t\tsuper(message || (baseError && baseError.message));\n\t\t// https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tObject.setPrototypeOf(this, GraphError.prototype);\n\t\tthis.statusCode = statusCode;\n\t\tthis.code = null;\n\t\tthis.requestId = null;\n\t\tthis.date = new Date();\n\t\tthis.body = null;\n\t\tthis.stack = baseError ? baseError.stack : this.stack;\n\t}\n}\n"],"mappings":"AAAA;;;;;;AAOA;;;AAIA;;;;;;;AAQA,OAAM,MAAOA,UAAW,SAAQC,KAAK;EAiCpC;;;;;;;;;EASAC,YAAmBC,UAAU,GAAG,CAAC,CAAC,EAAEC,OAAgB,EAAEC,SAAiB;IACtE,KAAK,CAACD,OAAO,IAAKC,SAAS,IAAIA,SAAS,CAACD,OAAQ,CAAC;IAClD;IACAE,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,UAAU,CAACQ,SAAS,CAAC;IACjD,IAAI,CAACL,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACM,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGT,SAAS,GAAGA,SAAS,CAACS,KAAK,GAAG,IAAI,CAACA,KAAK;EACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}